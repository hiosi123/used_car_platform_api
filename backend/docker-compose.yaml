version: '3.7'

services:
  my-backend:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./src:/myfolder/src

    ports:
      - 3000:3000

  my-database:
    platform: linux/x86_64
    image: mysql:latest
    environment:
      MYSQL_DATABASE: 'mydocker02'
      MYSQL_ROOT_PASSWORD: 'root'
    env_file:
      - ./.env
    ports:
      - 3306:3306

  my-redis:
    image: redis:latest
    ports:
      - 6379:6379

  elasticsearch:
    image: elasticsearch:7.17.0
    environment:
      discovery.type: single-node
    ports:
      - 9200:9200

  #mysql 에 있는 데이터를 뽑아서 2차적인 일을 한다, logstash - mysql 에 있는 데이터 뽑아서 - elasticsearch 에 넣어주기 (이과정을 Polling)
  logstash:
    image: logstash:7.17.0
    volumes:
      - ./elk/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./elk/logstash/mysql-connector-java-8.0.28.jar:/usr/share/logstash/mysql-connector-java-8.0.28.jar
      - ./elk/logstash/template.json:/usr/share/logstash/template.json
  # kibana:
  #   image: kibana:7.17.0
  #   environment:
  #     ELASTICSEARCH_UTL: http://elasticsearch:9200
  #     ELASTICSEARCH_HOSTS: http://elasticsearch:9200
  #   ports:
  #     - 5601:5601
